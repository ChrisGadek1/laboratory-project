# Generated by Django 3.1.7 on 2021-05-10 10:43

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ControlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'permissions': [('can_operate_on_ControlType', 'Can add/edit/delete ControlType')],
            },
        ),
        migrations.CreateModel(
            name='DeliveryWay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'permissions': [('can_operate_on_DeliveryWay', 'Can add/edit/delete DeliveryWay')],
            },
        ),
        migrations.CreateModel(
            name='MetodAndNorm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'permissions': [('can_operate_on_MetodAndNorm', 'Can add/edit/delete MetodAndNorm')],
            },
        ),
        migrations.CreateModel(
            name='Mode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode_name', models.CharField(choices=[('Add', 'Dodaj'), ('Edit', 'Modyfikuj'), ('Delete', 'Usuń')], default='Add', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='ResearchStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'permissions': [('can_operate_on_ResearchStatus', 'Can add/edit/delete ResearchStatus')],
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'permissions': [('can_operate_on_Type', 'Can add/edit/delete Type')],
            },
        ),
        migrations.CreateModel(
            name='WIJHARS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'permissions': [('can_operate_on_WIJHARS', 'Can add/edit/delete WIJHARS')],
            },
        ),
        migrations.CreateModel(
            name='Sampling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('code', models.CharField(max_length=100)),
                ('assortment', models.TextField()),
                ('admission_date', models.DateField(default=datetime.date.today)),
                ('expiration_date', models.DateField()),
                ('completion_date', models.DateField()),
                ('additional_comment', models.CharField(max_length=100)),
                ('customer_name', models.CharField(max_length=100)),
                ('size', models.CharField(max_length=100)),
                ('condition', models.CharField(default='Bez zastrzeżeń', max_length=100)),
                ('appeal_analysis', models.BooleanField(default=False)),
                ('manufacturer_name', models.CharField(max_length=300)),
                ('manufacturer_address', models.CharField(max_length=500)),
                ('sample_getter1_name', models.CharField(max_length=50)),
                ('sample_getter1_surname', models.CharField(max_length=100)),
                ('sample_getter1_position', models.CharField(max_length=100)),
                ('sample_getter2_name', models.CharField(max_length=50)),
                ('sample_getter2_surname', models.CharField(max_length=100)),
                ('sample_getter2_position', models.CharField(max_length=100)),
                ('manufacturer', models.CharField(max_length=300)),
                ('final_consumer', models.BooleanField()),
                ('consumer_name', models.CharField(max_length=100)),
                ('consumer_address', models.CharField(max_length=200)),
                ('order_number', models.IntegerField()),
                ('mechanism_name_and_symbol', models.TextField()),
                ('is_OK', models.CharField(choices=[('YES', 'Tak'), ('NO', 'Nie')], max_length=3)),
                ('if_not_why', models.TextField(blank=True)),
                ('recipient', models.CharField(blank=True, max_length=200, null=True)),
                ('agreement_number', models.CharField(blank=True, max_length=20, null=True)),
                ('collection_date', models.DateField(null=True)),
                ('case_number', models.CharField(blank=True, max_length=20, null=True)),
                ('delivery_date', models.DateField(null=True)),
                ('type_of_package', models.CharField(blank=True, max_length=100, null=True)),
                ('batch_size', models.CharField(blank=True, max_length=50, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True)),
                ('batch_production_date', models.DateField(null=True)),
                ('WIJHARS', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.wijhars')),
                ('control_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.controltype')),
                ('sample_delivery', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.deliveryway')),
                ('sampling_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.metodandnorm')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.type')),
            ],
            options={
                'permissions': [('can_operate_on_sampling', 'Can add/edit/delete sampling')],
            },
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('marking', models.CharField(max_length=300)),
                ('nutritional_value', models.CharField(max_length=300)),
                ('specification', models.CharField(max_length=300)),
                ('ordinance', models.CharField(max_length=300)),
                ('samples_number', models.IntegerField()),
                ('result', models.IntegerField()),
                ('start_date', models.DateField()),
                ('completion_date', models.DateField()),
                ('uncertainty', models.CharField(max_length=300)),
                ('summary_meet_requirements', models.BooleanField()),
                ('summary_requirements_explains', models.TextField(blank=True)),
                ('requirements', models.TextField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('sampling', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.sampling')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.researchstatus')),
            ],
            options={
                'permissions': [('can_operate_on_Research', 'Can add/edit/delete Research')],
            },
        ),
        migrations.CreateModel(
            name='FindWIJHARS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wijhars_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.wijhars')),
            ],
        ),
        migrations.CreateModel(
            name='FindType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.type')),
            ],
        ),
        migrations.CreateModel(
            name='FindResearchStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_status_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.researchstatus')),
            ],
        ),
        migrations.CreateModel(
            name='FindResearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.research')),
            ],
        ),
        migrations.CreateModel(
            name='FindMetodAndNorm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metod_and_norm_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.metodandnorm')),
            ],
        ),
        migrations.CreateModel(
            name='FindDeliveryWay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_way_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.deliveryway')),
            ],
        ),
        migrations.CreateModel(
            name='FindControlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_type_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.controltype')),
            ],
        ),
    ]
